#!/usr/bin/env ruby

require 'rubygems'
require 'bundler/setup'
require File.expand_path('../config/environment', __dir__)

EM.run {
  if Settings.blaze_enable
    QuillBot.api.start_blaze_connect do
      def on_open(ws, _event)
        p ['Quill', Time.current, :open]
        ws.send QuillBot.api.list_pending_message
      end

      def on_message(ws, event)
        raw = JSON.parse QuillBot.api.read_ws_message(event.data)
        return if raw&.[]('action') == 'ACKNOWLEDGE_MESSAGE_RECEIPT'

        p ['Quill', Time.current, :message, raw&.[]('action')]
        data = raw['data']
        return if data.blank?

        # process message
        MixinMessage.create_with(raw: raw).find_or_create_by(message_id: data['message_id'])

        # ack
        ws.send QuillBot.api.acknowledge_message_receipt(data['message_id']) if data&.[]('message_id').present?
      end
    end
  end

  MixinNetworkSnapshot.poll
}

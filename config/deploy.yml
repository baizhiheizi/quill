# Name of your application. Used to uniquely configure containers.
service: quill

# Name of the container image.
image: anleework/quill

# Deploy to these servers.
servers:
  web:
    hosts:
      - 172.235.197.72

  blaze:
    hosts:
      - 172.235.197.72
    cmd: bin/mixin_blaze
  job:
    hosts:
      - 172.235.197.72
    cmd: bundle exec good_job start

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: anleework

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
env:
  clear:
    DATABASE_HOST: 'quill-db'
    POSTGRES_USER: 'postgres'
    POSTGRES_DB: 'quill_production'
  secret:
    - RAILS_MASTER_KEY
    - POSTGRES_PASSWORD

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
aliases:
  console: app exec --interactive --reuse "bin/rails console"
  shell: app exec --interactive --reuse "bash"
  logs: app logs -f
  dbc: app exec --interactive --reuse "bin/rails dbconsole"
# Use a different ssh user than root
# ssh:
#   user: app

# Configure builder setup.
builder:
  arch: amd64

# Use accessory services (secrets come from .env).
accessories:
  db:
    image: pgvector/pgvector:pg16
    host: 172.235.197.72
    port: 5432
    env:
      clear:
        POSTGRES_USER: 'postgres'
        POSTGRES_DB: 'quill_production'
      secret:
        - POSTGRES_PASSWORD
    # files:
    #   - db/production.dump:/backup/production.dump
    directories:
      - data:/var/lib/postgresql/data
  db_backup:
    image: eeshugerman/postgres-backup-s3:16
    host: 172.235.197.72
    env:
      clear:
        SCHEDULE: '@daily' # optional
        BACKUP_KEEP_DAYS: 7 # optional
        S3_REGION: auto
        S3_PREFIX: 'quill'
        POSTGRES_HOST: '172.18.0.1'
        POSTGRES_DATABASE: quill_production
        POSTGRES_USER: postgres
      secret:
        - S3_ACCESS_KEY_ID
        - S3_SECRET_ACCESS_KEY
        - S3_BUCKET
        - S3_ENDPOINT
        - POSTGRES_PASSWORD

proxy:
  host: quill.im
  ssl: true
  app_port: 3000
# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
#
# If your app is using the Sprockets gem, ensure it sets `config.assets.manifest`.
# See https://github.com/basecamp/kamal/issues/626 for details
#
# asset_path: /rails/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2

# Configure the role used to determine the primary_host. This host takes
# deploy locks, runs health checks during the deploy, and follow logs, etc.
#
# Caution: there's no support for role renaming yet, so be careful to cleanup
#          the previous role on the deployed hosts.
# primary_role: web

# Controls if we abort when see a role with no hosts. Disabling this may be
# useful for more complex deploy configurations.
#
# allow_empty_roles: false
